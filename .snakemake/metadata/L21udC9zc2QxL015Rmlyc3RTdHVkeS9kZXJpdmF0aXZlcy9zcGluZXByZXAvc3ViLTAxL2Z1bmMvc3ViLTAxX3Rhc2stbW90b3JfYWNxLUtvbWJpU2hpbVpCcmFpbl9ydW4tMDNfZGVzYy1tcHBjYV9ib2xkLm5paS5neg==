{"record_format_version": 6, "code": "        import os, subprocess\n        for i in range(N):\n        for i in range(N):\n            r = row_by_id(SAMPLES, i)\n            rD = row_by_id(MANIFEST_DERIV, i)\n            env = os.environ.copy()\n            env[\"IN_BOLD\"] = r[\"bold_path\"]\n            env[\"DENOISE_MPPCA\"] = \"1\" if CFG.get(\"options\", {}).get(\"denoise_mppca\", False) else \"0\"\n            Path(\"steps/spi05_mppca.sh\").chmod(0o755)\n            subprocess.run([\"bash\", \"steps/spi05_mppca.sh\"], check=True, env=env)\n            stage_file(r[\"mppca_path\"], rD[\"deriv_mppca\"])\n            write_prov(\n            write_prov(\n                target=rD[\"deriv_mppca\"],\n                step=\"mppca\",\n                inputs={\"IN_BOLD\": r[\"bold_path\"]},\n                params={\"denoise_mppca\": CFG.get(\"options\", {}).get(\"denoise_mppca\", False)},\n                tools={\"step\": \"spi05_mppca.sh\"},\n", "rule": "mppca", "input": [], "log": [], "params": [], "shellcmd": null, "incomplete": false, "starttime": null, "endtime": 1759854108.3771641, "job_hash": 7862238696810, "conda_env": null, "software_stack_hash": "d41d8cd98f00b204e9800998ecf8427e", "container_img_url": null, "input_checksums": {}}