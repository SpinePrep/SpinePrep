name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  validate-tag:
    name: Validate Tag Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check version match
        run: |
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          PKG_VERSION=$(grep "^__version__" spineprep/_version.py | cut -d'"' -f2)
          echo "Tag version: $TAG_VERSION"
          echo "Package version: $PKG_VERSION"
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "::error::Version mismatch: tag v$TAG_VERSION != package $PKG_VERSION"
            exit 1
          fi

  build-container:
    name: Build and Push Container
    runs-on: ubuntu-latest
    needs: validate-tag
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/spineprep
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Record image digest
        run: |
          echo "Image pushed to: ${{ steps.meta.outputs.tags }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"

  deploy-docs:
    name: Deploy Versioned Docs
    runs-on: ubuntu-latest
    needs: validate-tag
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for mike

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -e .[docs]
          pip install mike

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract version
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Deploy with mike
        run: |
          VERSION=${{ steps.version.outputs.version }}
          # Deploy this version
          mike deploy --push --update-aliases $VERSION stable
          # Set stable as default
          mike set-default --push stable

      - name: Verify deployment
        run: |
          echo "Docs deployed to:"
          echo "  - https://spineprep.github.io/stable/ (v${{ steps.version.outputs.version }})"
          echo "  - https://spineprep.github.io/ (latest dev)"

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [validate-tag, build-container, deploy-docs]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract changelog
        id: changelog
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          # Extract version section from CHANGELOG.md
          sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
